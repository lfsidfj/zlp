<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ContractTypeMapper">
	
	<resultMap type="ContractType" id="contracttypeResultMap">
		<id column="CONTRACTTYPE_ID" property="CONTRACTTYPE_ID"/>
		<result column="NAME" property="NAME"/>
		<result column="PARENT_ID" property="PARENT_ID"/>
	</resultMap>
	
	<!--表名 -->
	<sql id="tableName">
		ZLP_CONTRACT_TYPE
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		STATUS,	
		CREATE_USER,	
		CREATE_DATE,	
		MODIFY_USER,	
		MODIFY_DATE,	
		DESCRIPTION,	
		CONTRACTTYPE_ID,
		PARENT_ID,
		NAME,
		ORDER_BY,
		PARENT_ID_LIST
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{STATUS},	
		#{CREATE_USER},	
		#{CREATE_DATE},	
		#{MODIFY_USER},	
		#{MODIFY_DATE},	
		#{DESCRIPTION},	
		#{CONTRACTTYPE_ID},
		#{PARENT_ID},
		#{NAME},
		#{ORDER_BY},
		#{PARENT_ID_LIST}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
	<selectKey keyProperty="CONTRACTTYPE_ID" order="AFTER" resultType="java.lang.Long">
			select LAST_INSERT_ID()
		</selectKey>
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			CONTRACTTYPE_ID = #{CONTRACTTYPE_ID}
	</delete>
	<!-- 假删除-->
	<delete id="fakeDelete" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			STATUS = '2',
		CONTRACTTYPE_ID = CONTRACTTYPE_ID
		where 
		CONTRACTTYPE_ID = #{CONTRACTTYPE_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			<if test="STATUS !=null and STATUS !=''">
			STATUS = #{STATUS},
			</if>
			<if test="CREATE_USER !=null and CREATE_USER !=''">
			CREATE_USER = #{CREATE_USER},
			</if>
			<if test="CREATE_DATE !=null">
			CREATE_DATE = #{CREATE_DATE},
			</if>
			<if test="MODIFY_USER !=null and MODIFY_USER !=''">
			MODIFY_USER = #{MODIFY_USER},
			</if>
			<if test="MODIFY_DATE !=null">
			MODIFY_DATE = #{MODIFY_DATE},
			</if>
			<if test="DESCRIPTION !=null and DESCRIPTION !=''">
			DESCRIPTION = #{DESCRIPTION},
			</if>
			<if test="NAME !=null and NAME !=''">
			NAME = #{NAME},
			</if>
			<if test="ORDER_BY !=null">
			ORDER_BY = #{ORDER_BY},
			</if>
			<if test="PARENT_ID_LIST !=null and PARENT_ID_LIST!=''">
			PARENT_ID_LIST = #{PARENT_ID_LIST},
			</if>
		CONTRACTTYPE_ID = CONTRACTTYPE_ID
		where 
		CONTRACTTYPE_ID = #{CONTRACTTYPE_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			CONTRACTTYPE_ID = #{CONTRACTTYPE_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.CONTRACTTYPE_ID!= null and pd.CONTRACTTYPE_ID != ''"><!-- 检索 -->
		and PARENT_ID = #{pd.CONTRACTTYPE_ID}
		</if>
		and STATUS &lt;&gt;'2'
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件-->
					NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					DESCRIPTION LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				
				)
		</if>
		order by ORDER_BY ASC,CREATE_DATE DESC 
	</select>
	
	<!-- 通过ID获取其子级列表 -->
	<select id="listByParentId" parameterType="String" resultMap="contracttypeResultMap">
		select 
			STATUS,	
			CREATE_USER,	
			CREATE_DATE,	
			MODIFY_USER,	
			MODIFY_DATE,	
			DESCRIPTION,	
			CONTRACTTYPE_ID,
			PARENT_ID,
			CONCAT(NAME,'(ID:',CONTRACTTYPE_ID,')') as NAME,
			ORDER_BY,
			PARENT_ID_LIST
		from 
		<include refid="tableName"></include>
		where 
			PARENT_ID = #{parentId} and STATUS &lt;&gt; '2' order by ORDER_BY ASC,CREATE_DATE DESC 
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 通过ID获取数据 -->
	<select id="findByParentId" parameterType="String" resultType="pd">
		select 
		CONTRACTTYPE_ID,
		PARENT_ID,
		NAME
		from 
		<include refid="tableName"></include>
		where 
			PARENT_ID = #{parentId}
	</select>
	<!-- 查出子孙列表 -->
	<select id="findGrandchilds" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			PARENT_ID_LIST LIKE CONCAT(CONCAT('%,', #{PARENT_ID_LIST}),',%') AND PARENT_ID &lt;&gt; '0' and STATUS = '1'
	</select>
	
	<!-- 列出所有子孙ID列表 -->
	<select id="listAllGrandchildrenIds" parameterType="pd" resultType="int">
		SELECT
			t.CONTRACTTYPE_ID
		FROM
			szjm_contract_type t
		WHERE
			t.PARENT_ID_LIST LIKE CONCAT(CONCAT('%,', #{PARENT_ID}),',%')
		AND t.PARENT_ID &lt;&gt; '0'
	</select>
</mapper>