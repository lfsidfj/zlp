<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CartMapper">

	<!--表名 -->
	<sql id="tableName">
		ZLP_CART
	</sql>

	<!-- 字段 -->
	<sql id="Field">
		CART_ID,
		GOODS_ID,
		SPEC,
		GOODS_CURRENT_PRICE,
		AMOUNT,
		GOODS_AMOUNT,
		INTEGRATION_AMOUNT,
		DEDUCTION_MONEY,
		REAL_PAY_AMOUNT,
		USER_ID,
		CREATE_DATE,
		CREATE_USER,
		UPDATE_DATE,
		UPDATE_USER,
		DELETE_STATUS,
		ORDER_ID,
		GOODS_ORIGINAL_PRICE,
		GOODS_POSITION,
		NEED_INTEGRATION,
		IS_COMMENT,
		SKU_ID,
		TYPE
	</sql>
	<!-- 带别名字段 -->
	<sql id="FieldWithAlias">
		o.CART_ID,
		o.GOODS_ID,
		o.SPEC,
		o.GOODS_CURRENT_PRICE,
		o.AMOUNT,
		o.GOODS_AMOUNT,
		o.INTEGRATION_AMOUNT,
		o.DEDUCTION_MONEY,
		o.REAL_PAY_AMOUNT,
		o.USER_ID,
		o.CREATE_DATE,
		o.CREATE_USER,
		o.UPDATE_DATE,
		o.UPDATE_USER,
		o.DELETE_STATUS,
		o.ORDER_ID,
		o.GOODS_ORIGINAL_PRICE,
		o.GOODS_POSITION,
		o.NEED_INTEGRATION,
		o.IS_COMMENT,
		o.SKU_ID,
		o.TYPE
	</sql>

	<!-- 字段值 -->
	<sql id="FieldValue">
		#{CART_ID},
		#{GOODS_ID},
		#{SPEC},
		#{GOODS_CURRENT_PRICE},
		#{AMOUNT},
		#{GOODS_AMOUNT},
		#{INTEGRATION_AMOUNT},
		#{DEDUCTION_MONEY},
		#{REAL_PAY_AMOUNT},
		#{USER_ID},
		#{CREATE_DATE},
		#{CREATE_USER},
		#{UPDATE_DATE},
		#{UPDATE_USER},
		#{DELETE_STATUS},
		#{ORDER_ID},
		#{GOODS_ORIGINAL_PRICE},
		#{GOODS_POSITION},
		#{NEED_INTEGRATION},
		#{IS_COMMENT},
		#{SKU_ID},
		#{TYPE}
	</sql>

	<!-- 新增-->
	<insert id="save"  parameterType="pd">
		insert into
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	<!-- DCWI新增-->
	<insert id="saveAward"  parameterType="pd">
		<selectKey keyProperty="CART_ID" order="AFTER" resultType="java.lang.Integer">
			select LAST_INSERT_ID()
		</selectKey>
		insert into
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>

	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where
			CART_ID = #{CART_ID}
			and ORDER_ID IS NULL
	</delete>

	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
			CART_ID = #{CART_ID},
			GOODS_ID = #{GOODS_ID},
			SPEC = #{SPEC},
			GOODS_CURRENT_PRICE = #{GOODS_CURRENT_PRICE},
			AMOUNT = #{AMOUNT},
			GOODS_AMOUNT = #{GOODS_AMOUNT},
			INTEGRATION_AMOUNT = #{INTEGRATION_AMOUNT},
			DEDUCTION_MONEY = #{DEDUCTION_MONEY},
			REAL_PAY_AMOUNT = #{REAL_PAY_AMOUNT},
			USER_ID = #{USER_ID},
			CREATE_DATE = #{CREATE_DATE},
			CREATE_USER = #{CREATE_USER},
			UPDATE_DATE = #{UPDATE_DATE},
			UPDATE_USER = #{UPDATE_USER},
			DELETE_STATUS = #{DELETE_STATUS},
			ORDER_ID = #{ORDER_ID},
			GOODS_ORIGINAL_PRICE = #{GOODS_ORIGINAL_PRICE},
			GOODS_POSITION = #{GOODS_POSITION},
			NEED_INTEGRATION = #{NEED_INTEGRATION},
			IS_COMMENT = #{IS_COMMENT},
		CART_ID = CART_ID
		where
		CART_ID = #{CART_ID}
		and ORDER_ID IS NULL
	</update>

	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select
		<include refid="FieldWithAlias"></include>,
		g.GOODS_NAME,
		g.ORIGINAL_PRICE,
		p.PATH
		from
		<include refid="tableName"></include> o
		LEFT JOIN zlp_goods g on o.GOODS_ID = g.GOODS_ID
		LEFT JOIN tb_pictures p on g.PICTURE_ID = p.PICTURES_ID
		where
			CART_ID = #{CART_ID}
			<if test="USER_ID!=null and USER_ID!=''">
	       	and		USER_ID=#{USER_ID}
			</if>
			and ORDER_ID IS NULL
	</select>
	<select id="findByIdIsNotNull" parameterType="pd" resultType="pd">
		select
		<include refid="FieldWithAlias"></include>,
		g.GOODS_NAME,
		g.ORIGINAL_PRICE,
		p.PATH
		from
		<include refid="tableName"></include> o
		LEFT JOIN zlp_goods g on o.GOODS_ID = g.GOODS_ID
		LEFT JOIN tb_pictures p on g.PICTURE_ID = p.PICTURES_ID
		where
			CART_ID = #{CART_ID}
			<if test="USER_ID!=null and USER_ID!=''">
	       	and		USER_ID=#{USER_ID}
			</if>
	</select>

	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				-->
				)
		</if>
	</select>

	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="FieldWithAlias"></include>,
		g.GOODS_NAME,
		p.PATH
		from
		<include refid="tableName"></include> o
		LEFT JOIN zlp_goods g on o.GOODS_ID=g.GOODS_ID
		LEFT JOIN tb_pictures p on g.PICTURE_ID=p.PICTURES_ID
		where 1=1
		<if test="USER_ID!=null and USER_ID!=''">
	       and		o.USER_ID=#{USER_ID}
		</if>
		<if test="ORDER_ID!=null and ORDER_ID!=''">
	       and		o.ORDER_ID=#{ORDER_ID}
		</if>
		and  o.DELETE_STATUS = 0
		and o.ORDER_ID IS NULL
		and o.TYPE =0
	</select>

	<!-- 订单详情使用，根据订单ID查询该订单的购物车与商品 -->
	<select id="listAllCartAndGoods" parameterType="pd" resultType="pd">
		select
		<include refid="FieldWithAlias"></include>,
		g.GOODS_NAME,
		p.PATH
		from
		<include refid="tableName"></include> o
		LEFT JOIN zlp_goods g on o.GOODS_ID=g.GOODS_ID
		LEFT JOIN tb_pictures p on g.PICTURE_ID=p.PICTURES_ID
		<if test="ZWWW!=null and ZWWW!=''">
		LEFT JOIN zlp_order lo on o.ORDER_ID=lo.ORDER_ID
		</if>
		where 1=1
		<!-- 查看订单详情使用 -->
		<if test="ORDER_ID!=null and ORDER_ID!=''">
		 and	o.ORDER_ID=#{ORDER_ID}
		</if>
		<!-- 查看领取蛋糕次数使用 -->
		<if test="GOODS_POSITION!=null and GOODS_POSITION!=''">
		 and	o.GOODS_POSITION=#{GOODS_POSITION}
		</if>
		<if test="USER_ID!=null and USER_ID!=''">
		 and	o.USER_ID=#{USER_ID}
		</if>
		<if test="ZWWW!=null and ZWWW!=''">
		 and	o.ORDER_ID is  not  null
		 and    lo.ORDER_STATUS=1
		</if>
	</select>

	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where
			CART_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>

	<!-- 用户新增 返回ID-->
	<insert id="addCart" keyProperty="cid" useGeneratedKeys="true" parameterType="pd">
		insert into
	<include refid="tableName"></include>
		(
			GOODS_ID,
			SPEC,
			GOODS_CURRENT_PRICE,
			AMOUNT,
			GOODS_AMOUNT,
			INTEGRATION_AMOUNT,
			DEDUCTION_MONEY,
			USER_ID,
			CREATE_DATE,
			DELETE_STATUS,
			GOODS_ORIGINAL_PRICE,
			GOODS_POSITION,
			ORDER_ID,
			REAL_PAY_AMOUNT,
			SKU_ID,
			TYPE,
			IS_COMMENT
		) values (
			#{GOODS_ID},
			#{SPEC},
			#{GOODS_CURRENT_PRICE},
			#{AMOUNT},
			#{GOODS_AMOUNT},
			#{INTEGRATION_AMOUNT},
			#{DEDUCTION_MONEY},
			#{USER_ID},
			#{CREATE_DATE},
			#{DELETE_STATUS},
			#{GOODS_ORIGINAL_PRICE},
			#{GOODS_POSITION},
			#{ORDER_ID},
			#{REAL_PAY_AMOUNT},
			#{SKU_ID},
			#{TYPE},
			#{IS_COMMENT}
		)
	</insert>


	<!--  修改增加数量 -->
	<update id="editAddCart" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
			AMOUNT = AMOUNT+ #{AMOUNT},
			CART_ID = CART_ID
		where
		CART_ID = #{CART_ID}
		and ORDER_ID IS NULL
	</update>

	<!--  修改数量 -->
	<update id="editCart" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
			AMOUNT = #{AMOUNT},
			CART_ID = CART_ID
		where
		CART_ID = #{CART_ID}
		and ORDER_ID IS NULL
	</update>

	<!-- 通过ID获取数据 -->
	<select id="findByIdOrder" parameterType="pd" resultType="pd">
		select
		<include refid="FieldWithAlias"></include>,
		g.GOODS_NAME,
		g.DEDUCTION_MONEY as GOODS_DEDUCTION_MONEY,
		g.DISCOUNT,
		p.PATH
		from
		<include refid="tableName"></include> o
		LEFT JOIN zlp_goods g on o.GOODS_ID = g.GOODS_ID
		LEFT JOIN tb_pictures p on g.PICTURE_ID = p.PICTURES_ID
		where
			o.CART_ID = #{CART_ID}
			<if test="USER_ID!=null and USER_ID!=''">
	       	and		o.USER_ID=#{USER_ID}
			</if>
			and o.ORDER_ID IS NULL
	</select>


	<!--  通过id修改修改规格值 -->
	<update id="editCartSPEC" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
			SPEC =  #{SPEC},
			SKU_ID =  #{SKU_ID},
			CART_ID = CART_ID
		where
		CART_ID = #{CART_ID}
		and USER_ID=#{USER_ID}
		and ORDER_ID IS NULL
	</update>
	<update id="editCartIsC" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
			IS_COMMENT =  #{IS_COMMENT},
			CART_ID = CART_ID
		where
		CART_ID = #{CART_ID}
	</update>
	<!--  通过id修改修改礼豆抵扣金额 -->
	<update id="editCartDeduction" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
			INTEGRATION_AMOUNT = #{INTEGRATION_AMOUNT},
			DEDUCTION_MONEY  = #{DEDUCTION_MONEY},
			REAL_PAY_AMOUNT = #{REAL_PAY_AMOUNT},
			CART_ID = CART_ID
		where
		CART_ID = #{CART_ID}
		and ORDER_ID IS NULL
	</update>


	<!--  修改购物车订单Id -->
	<update id="editCartOrderId" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
			ORDER_ID = #{ORDER_ID},
			CART_ID = CART_ID
		where
		CART_ID = #{CART_ID}
		and ORDER_ID IS NULL
	</update>

	<!--  后台删除商品时，移除用户购物车商品 -->
	<update id="deleteByGoods" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
			DELETE_STATUS = 1,
			CART_ID = CART_ID
		where
			GOODS_ID =#{GOODS_ID}
	</update>

	<!-- 后台批量删除商品时，移除用户购物车商品 -->
	<update id="deleteAllByGoods" parameterType="String">
		update
		<include refid="tableName"></include>
		set
			DELETE_STATUS=1
		where
			GOODS_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</update>

</mapper>